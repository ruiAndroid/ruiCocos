{"version":3,"sources":["..\\..\\..\\..\\assets\\script/assets\\script\\Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","game","default","serializable","onLoad","getPlayerDistance","playerPos","player","getPosition","console","log","node","position","dist","pDistance","onPicked","spawnNewStar","gainScore","destroy","start","update","dt"],"mappings":";;;;;;AACAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AAAA,eAAK;AACb;AACAC,wBAAW,CAFE;AAGb;AACAC,kBAAK;AACDC,yBAAS,IADR;AAEDC,8BAAc;AAFb;AAJQ,SAAL;AAAA,KAHP;;AAaLC,YAAQ,kBAAW,CAGlB,CAhBI;;AAkBL;;;AAGAC,uBAAkB,6BAAU;AACxB;AACA,YAAIC,YAAY,KAAKL,IAAL,CAAUM,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACAC,gBAAQC,GAAR,CAAY,QAAZ,EAAqB,KAAKC,IAAL,CAAUC,QAA/B;AACAH,gBAAQC,GAAR,CAAY,QAAZ,EAAqBJ,SAArB;AACA,YAAIO,OAAOlB,GAAGmB,SAAH,CAAa,KAAKH,IAAL,CAAUC,QAAvB,EAAiCN,SAAjC,CAAX;AACA,eAAOO,IAAP;AAEH,KA9BI;;AAgCL;;;AAGAE,cAAS,oBAAU;AACf;AACA,aAAKd,IAAL,CAAUe,YAAV;AACA;AACA,aAAKf,IAAL,CAAUgB,SAAV;AACA;AACA,aAAKN,IAAL,CAAUO,OAAV;AAEH,KA3CI;;AA6CLC,WAAO,iBAAW,CAEjB,CA/CI;;AAiDLC,YAAQ,gBAASC,EAAT,EAAa;AACjB;AACA;AACAZ,gBAAQC,GAAR,CAAY,KAAKL,iBAAL,EAAZ;AACA,YAAI,KAAKA,iBAAL,KAA2B,KAAKL,UAApC,EAAgD;AAC5C;AACA,iBAAKe,QAAL;AACA;AACH;AACJ;AA1DI,CAAT","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: ()=>({\r\n        //碰撞检测,当两者之间的距离小于这玩意时,视为得分\r\n        pickRadius:0,\r\n        //暂存对象引用\r\n        game:{\r\n            default: null,\r\n            serializable: false\r\n        }\r\n    }),\r\n\r\n    onLoad :function() {\r\n\r\n\r\n    },\r\n\r\n    /**\r\n     * 获取主角与星星之间的距离\r\n     */\r\n    getPlayerDistance:function(){\r\n        //根据player节点位置判断距离\r\n        let playerPos = this.game.player.getPosition();\r\n        // 根据两点位置计算两点之间距离\r\n        console.log(\"星星的位置:\",this.node.position);\r\n        console.log(\"角色的位置:\",playerPos);\r\n        let dist = cc.pDistance(this.node.position, playerPos);\r\n        return dist;\r\n\r\n    },\r\n\r\n    /**\r\n     * 两者碰撞时\r\n     */\r\n    onPicked:function(){\r\n        //当星星被收集时,调用game脚本中的接口\r\n        this.game.spawnNewStar();\r\n        // 调用 Game 脚本的得分方法\r\n        this.game.gainScore();\r\n        //销毁当前节点\r\n        this.node.destroy();\r\n\r\n    },\r\n\r\n    start :function() {\r\n\r\n    },\r\n\r\n    update :function(dt) {\r\n        //判断星星与主角的距离\r\n        // 每帧判断和主角之间的距离是否小于收集距离\r\n        console.log(this.getPlayerDistance());\r\n        if (this.getPlayerDistance() < this.pickRadius) {\r\n            // 调用收集行为\r\n            this.onPicked();\r\n            return;\r\n        }\r\n    },\r\n});\r\n"]}