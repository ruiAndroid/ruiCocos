{"version":3,"sources":["..\\..\\..\\..\\assets\\script/assets\\script\\Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","minStarDuration","maxStarDuration","ground","Node","player","scoreDisplay","Label","onLoad","score","spawnNewStar","gainScore","string","toString","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","console","log","groundY","randX","randY","randomMinus1To1","jumpHeight","maxX","width","p","start","update","dt"],"mappings":";;;;;;AAAA;;;AAGAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAFJ;AAMR;AACAC,yBAAgB,CAPR;AAQRC,yBAAgB,CARR;AASR;AACAC,gBAAO;AACHL,qBAAQ,IADL;AAEHC,kBAAKP,GAAGY;AAFL,SAVC;AAcR;AACAC,gBAAO;AACHP,qBAAQ,IADL;AAEHC,kBAAKP,GAAGY;AAFL,SAfC;AAmBR;AACAE,sBAAa;AACTP,kBAAKP,GAAGe,KADC;AAETT,qBAAQ;AAFC;;AApBL,KAHP;;AA+BLU,YAAO,kBAAY;AACf;AACA,aAAKC,KAAL,GAAW,CAAX;AACA;AACA;AACA,aAAKC,YAAL;AAGH,KAvCI;;AAyCL;;;AAGAC,eAAU,qBAAU;AAChB,aAAKF,KAAL,IAAc,CAAd;AACA;AACA,aAAKH,YAAL,CAAkBM,MAAlB,GAA2B,YAAY,KAAKH,KAAL,CAAWI,QAAX,EAAvC;AAEH,KAjDI;;AAmDL;;;;AAIAH,kBAAa,wBAAU;AACnB;AACA,YAAII,UAAQtB,GAAGuB,WAAH,CAAe,KAAKlB,UAApB,CAAZ;AACA;AACA,aAAKmB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AACA;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAkC,IAAlC;AAEH,KAjEI;;AAmEL;;;AAGAF,wBAAmB,8BAAU;AACzBG,gBAAQC,GAAR,CAAY,WAAZ;AACAD,gBAAQC,GAAR,CAAY,KAAKC,OAAjB;AACA,YAAIC,QAAQ,CAAZ;AACA;AACA,YAAIC,QAASlC,GAAGmC,eAAH,KAAqB,KAAKtB,MAAL,CAAYe,YAAZ,CAAyB,QAAzB,EAAmCQ,UAAxD,GAAmE,CAAhF;AACA;AACA,YAAIC,OAAO,KAAKb,IAAL,CAAUc,KAAV,GAAgB,CAA3B;AACAL,gBAAQjC,GAAGmC,eAAH,KAAuBE,IAA/B;AACA;AACAP,gBAAQC,GAAR,CAAY,cAAZ;AACAD,gBAAQC,GAAR,CAAYE,KAAZ,EAAmBC,KAAnB;;AAEA,eAAOlC,GAAGuC,CAAH,CAAKN,KAAL,EAAYC,KAAZ,CAAP;AAGH,KAtFI;;AAwFLM,SAxFK,mBAwFI,CAER,CA1FI;AA4FLC,UA5FK,kBA4FGC,EA5FH,EA4FO,CAEX;AA9FI,CAAT","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["/**\r\n * 游戏主逻辑控制脚本\r\n */\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 这个属性引用了星星预制资源\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        //星星产生后消失时间的随机范围\r\n        minStarDuration:0,\r\n        maxStarDuration:0,\r\n        //地面节点,用于确定星星生成的高度\r\n        ground:{\r\n            default:null,\r\n            type:cc.Node,\r\n        },\r\n        //player节点,用户获取主角弹跳高度,以及控制主角行动开关\r\n        player:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        //score对象的引用\r\n        scoreDisplay:{\r\n            type:cc.Label,\r\n            default:null,\r\n        }\r\n\r\n\r\n    },\r\n\r\n    onLoad:function () {\r\n        //初始化分数为0\r\n        this.score=0;\r\n        //获取地平面的y坐标\r\n        // this.groundY=this.ground.y+this.ground.height/2;\r\n        this.spawnNewStar()\r\n\r\n\r\n    },\r\n\r\n    /**\r\n     * 获取最新的分数并显示\r\n     */\r\n    gainScore:function(){\r\n        this.score += 1;\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\r\n\r\n    },\r\n\r\n    /**\r\n     * 随机生成一个星星\r\n     */\r\n\r\n    spawnNewStar:function(){\r\n        //使用给定的模板在场景中生成一个新的节点\r\n        let newStar=cc.instantiate(this.starPrefab);\r\n        //将新增的节点添加到Canvas节点下面\r\n        this.node.addChild(newStar);\r\n        // 为星星设置一个随机位置\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        //将Game组件的实例传入星星组件\r\n        newStar.getComponent('Star').game=this;\r\n\r\n    },\r\n\r\n    /**\r\n     * 设置一个随机位置\r\n     */\r\n    getNewStarPosition:function(){\r\n        console.log('查看groundY');\r\n        console.log(this.groundY);\r\n        let randX = 0;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        let randY =  cc.randomMinus1To1()*this.player.getComponent('Player').jumpHeight/3;\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        let maxX = this.node.width/2;\r\n        randX = cc.randomMinus1To1() * maxX;\r\n        // 返回星星坐标\r\n        console.log('查看随机生成的星星的坐标');\r\n        console.log(randX, randY);\r\n\r\n        return cc.p(randX, randY);\r\n\r\n\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n\r\n    },\r\n});\r\n"]}